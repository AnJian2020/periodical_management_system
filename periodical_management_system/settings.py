"""
Django settings for periodical_management_system project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'sds@x6^vd9tk*8=(qbv52$hk3c(#pw8laaah!1w@aj70#(*(k3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_results',    #分布式任务
    'django_celery_beat',        #定时任务
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'user_authent'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware'
]

ROOT_URLCONF = 'periodical_management_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'periodical_management_system.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'periodical_management_system.sqlite3',
        'TEST':{
            'NAME':'periodical_management_db'
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# rest_framework参数设置
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_AUTHENTICATION_CLASS': [
        'rest_framework.authentication.BasicAuthentication',
        'user.token_authentication.TokenAuthenticationRedis'],
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAuthenticated',),
}

# 利用redis作为系统缓存
CACHES={
    'default':{
        "BACKEND":"django_redis.cache.RedisCache",
        "LOCATION":"redis://127.0.0.1:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
        # "OPTIONS":{
        #     'REDIS_CLIENT_CLASS': 'rediscluster.RedisCluster',
        #     'CONNECTION_POOL_CLASS': 'rediscluster.connection.ClusterConnectionPool',
        # }
    }
}

# 设置存储celery任务队列的redis数据库
CELERY_BROKER_URL='redis://127.0.0.1:6379/1'
CELERT_ACCEPT_CONTENT=['json']
CELERY_TASK_SERIALIZER='json'
# 设置存储celery任务结果的数据库
CELERY_RESULT_BACKEND='django-db'

# 设置定时任务
CELERY_ENABLE_UTC=False
CELERY_BEAT_SCHEDULER='django_celery_beat.schedulers:DatabaseScheduler'

# token过期时间
TOKEN_OUT_TIME=30*60
# 视图过期时间
VIEW_OUT_TIME=60
# 键值对过期时间
KEY_VALUE_OUT_TIME=60

# 设置跨域
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
# CORS_ORIGIN_WHITELIST = ("*")
CORS_ALLOW_METHODS = ('DELETE', 'GET', 'POST', 'PUT')
CORS_ALLOW_HEADERS=(
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'Authorization',
    'user-agent',
    'content-type',
    'origin',
    'x-csrftoken',
    'x-requested-with',
    'dnt'
)


# 邮件配置信息
EMAIL_USE_SSL = True
# 邮件服务器
EMAIL_HOST = 'smtp.qq.com'
# 邮件服务器端口
EMAIL_PORT = 465
# 发送账号
EMAIL_HOST_USER = '2594092351@qq.com'

# 密码
EMAIL_HOST_PASSWORD = '密码'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


import logging
logging.basicConfig(filename="periodical_management_system_run_log.log",level=logging.INFO,format='%(asctime)s - %(filename)s[line:%(lineno)d] - %(levelname)s: %(message)s')